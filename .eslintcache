[{"/Users/p/dev/byond/open-source/open/packages/eslint-plugin-automate/src/data/data-component-excludes.ts":"1","/Users/p/dev/byond/open-source/open/packages/eslint-plugin-automate/src/index.ts":"2","/Users/p/dev/byond/open-source/open/packages/eslint-plugin-automate/src/rules/TODO.ts":"3","/Users/p/dev/byond/open-source/open/packages/eslint-plugin-automate/src/rules/control-recoil-value-usage.ts":"4","/Users/p/dev/byond/open-source/open/packages/eslint-plugin-automate/src/rules/exhaustive-deps.ts":"5","/Users/p/dev/byond/open-source/open/packages/eslint-plugin-automate/src/rules/generate-react-component.ts":"6","/Users/p/dev/byond/open-source/open/packages/eslint-plugin-automate/src/rules/imports-spacing.ts":"7","/Users/p/dev/byond/open-source/open/packages/eslint-plugin-automate/src/rules/index.ts":"8","/Users/p/dev/byond/open-source/open/packages/eslint-plugin-automate/src/rules/no-imports.ts":"9","/Users/p/dev/byond/open-source/open/packages/eslint-plugin-automate/src/rules/no-optional.ts":"10","/Users/p/dev/byond/open-source/open/packages/eslint-plugin-automate/src/rules/no-react-hooks.ts":"11","/Users/p/dev/byond/open-source/open/packages/eslint-plugin-automate/src/rules/react-wrap-jsx-callback.ts":"12","/Users/p/dev/byond/open-source/open/packages/eslint-plugin-automate/src/rules/react-wrap.ts":"13","/Users/p/dev/byond/open-source/open/packages/eslint-plugin-automate/src/rules/recoil-add-key.ts":"14","/Users/p/dev/byond/open-source/open/packages/eslint-plugin-automate/src/rules/recoil-gen-template.ts":"15","/Users/p/dev/byond/open-source/open/packages/eslint-plugin-automate/src/rules/replace-identifier.ts":"16","/Users/p/dev/byond/open-source/open/packages/eslint-plugin-automate/src/rules/replace-svg.ts":"17","/Users/p/dev/byond/open-source/open/packages/eslint-plugin-automate/src/rules/rules-of-hooks.ts":"18","/Users/p/dev/byond/open-source/open/packages/eslint-plugin-automate/src/utils/ast-utils.ts":"19","/Users/p/dev/byond/open-source/open/packages/eslint-plugin-automate/src/utils/general-utils.ts":"20","/Users/p/dev/byond/open-source/open/packages/eslint-plugin-automate/src/utils/import-utils.ts":"21","/Users/p/dev/byond/open-source/open/packages/react-recoil-utils/src/index.ts":"22","/Users/p/dev/byond/open-source/open/packages/react-recoil-utils/src/singleton-hook.tsx":"23","/Users/p/dev/byond/open-source/open/packages/react-utils/src/index.tsx":"24","/Users/p/dev/byond/open-source/open/packages/recoil-utils/src/index.ts":"25","/Users/p/dev/byond/open-source/open/packages/recoil-utils/src/log-recoil.tsx":"26","/Users/p/dev/byond/open-source/open/packages/recoil-utils/src/recoil-v2.tsx":"27","/Users/p/dev/byond/open-source/open/packages/recoil-utils/src/recoil-v3.tsx":"28","/Users/p/dev/byond/open-source/open/packages/recoil-utils/src/recoil.tsx":"29","/Users/p/dev/byond/open-source/open/packages/utils/src/index.ts":"30","/Users/p/dev/byond/open-source/open/packages/utils/src/log.ts":"31","/Users/p/dev/byond/open-source/open/packages/utils/src/ts-utils.ts":"32","/Users/p/dev/byond/open-source/open/packages/utils/src/utils.ts":"33","/Users/p/dev/byond/open-source/open/packages/zustand-utils/src/index.ts":"34","/Users/p/dev/byond/open-source/open/packages/zustand-utils/src/use-zustand-create.tsx":"35","/Users/p/dev/byond/open-source/open/packages/example-app/src/app.tsx":"36","/Users/p/dev/byond/open-source/open/packages/example-app/src/main.tsx":"37","/Users/p/dev/byond/open-source/open/packages/example-app/src/vite-env.d.ts":"38"},{"size":2779,"mtime":1700474943748,"results":"39","hashOfConfig":"40"},{"size":138,"mtime":1700474943749,"results":"41","hashOfConfig":"40"},{"size":3129,"mtime":1704977460079,"results":"42","hashOfConfig":"40"},{"size":11360,"mtime":1700481485861,"results":"43","hashOfConfig":"40"},{"size":62758,"mtime":1706114645144,"results":"44","hashOfConfig":"40"},{"size":3348,"mtime":1705322478495,"results":"45","hashOfConfig":"40"},{"size":2205,"mtime":1700474943752,"results":"46","hashOfConfig":"40"},{"size":457,"mtime":1700474943752,"results":"47","hashOfConfig":"40"},{"size":1675,"mtime":1700474943753,"results":"48","hashOfConfig":"40"},{"size":2567,"mtime":1700474943753,"results":"49","hashOfConfig":"40"},{"size":869,"mtime":1700474943754,"results":"50","hashOfConfig":"40"},{"size":3866,"mtime":1706114654342,"results":"51","hashOfConfig":"40"},{"size":18171,"mtime":1706114663635,"results":"52","hashOfConfig":"40"},{"size":8998,"mtime":1700474943754,"results":"53","hashOfConfig":"40"},{"size":13756,"mtime":1706114671484,"results":"54","hashOfConfig":"40"},{"size":2371,"mtime":1700474943755,"results":"55","hashOfConfig":"40"},{"size":2760,"mtime":1700474943755,"results":"56","hashOfConfig":"40"},{"size":22101,"mtime":1700474943755,"results":"57","hashOfConfig":"40"},{"size":17013,"mtime":1700474943756,"results":"58","hashOfConfig":"40"},{"size":1057,"mtime":1700474943757,"results":"59","hashOfConfig":"40"},{"size":4759,"mtime":1700474943757,"results":"60","hashOfConfig":"40"},{"size":45,"mtime":1703416057096,"results":"61","hashOfConfig":"62"},{"size":1207,"mtime":1704977622372,"results":"63","hashOfConfig":"62"},{"size":4279,"mtime":1705230846602,"results":"64","hashOfConfig":"65"},{"size":110,"mtime":1700475249344,"results":"66","hashOfConfig":"67"},{"size":3576,"mtime":1704977622386,"results":"68","hashOfConfig":"67"},{"size":15584,"mtime":1705838483190,"results":"69","hashOfConfig":"67"},{"size":1950,"mtime":1703415195428,"results":"70","hashOfConfig":"67"},{"size":5415,"mtime":1704992527290,"results":"71","hashOfConfig":"67"},{"size":73,"mtime":1703501562619,"results":"72","hashOfConfig":"73"},{"size":256,"mtime":1703499293002,"results":"74","hashOfConfig":"73"},{"size":1693,"mtime":1704976270446,"results":"75","hashOfConfig":"73"},{"size":175,"mtime":1703501547501,"results":"76","hashOfConfig":"73"},{"size":37,"mtime":1704993231561,"results":"77","hashOfConfig":"78"},{"size":2465,"mtime":1703506714704,"results":"79","hashOfConfig":"78"},{"size":925,"mtime":1706010570976,"results":"80","hashOfConfig":"81"},{"size":227,"mtime":1706010647927,"results":"82","hashOfConfig":"81"},{"size":38,"mtime":1703070225776,"results":"83","hashOfConfig":"81"},{"filePath":"84","messages":"85","suppressedMessages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1i4x27m",{"filePath":"87","messages":"88","suppressedMessages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"90","messages":"91","suppressedMessages":"92","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"93","messages":"94","suppressedMessages":"95","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"96","messages":"97","suppressedMessages":"98","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"99","messages":"100","suppressedMessages":"101","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"102","messages":"103","suppressedMessages":"104","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"105","messages":"106","suppressedMessages":"107","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"108","messages":"109","suppressedMessages":"110","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"111","messages":"112","suppressedMessages":"113","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"114","messages":"115","suppressedMessages":"116","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"117","messages":"118","suppressedMessages":"119","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"120","messages":"121","suppressedMessages":"122","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"123","messages":"124","suppressedMessages":"125","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"126","messages":"127","suppressedMessages":"128","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"129","messages":"130","suppressedMessages":"131","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"132","messages":"133","suppressedMessages":"134","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"135","messages":"136","suppressedMessages":"137","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"138","messages":"139","suppressedMessages":"140","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"141","messages":"142","suppressedMessages":"143","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"144","messages":"145","suppressedMessages":"146","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"147","messages":"148","suppressedMessages":"149","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"19kwu60",{"filePath":"150","messages":"151","suppressedMessages":"152","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"153","messages":"154","suppressedMessages":"155","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"m3ydqq",{"filePath":"156","messages":"157","suppressedMessages":"158","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1vcau4x",{"filePath":"159","messages":"160","suppressedMessages":"161","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"162","messages":"163","suppressedMessages":"164","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"165","messages":"166","suppressedMessages":"167","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"168","messages":"169","suppressedMessages":"170","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"171","messages":"172","suppressedMessages":"173","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1l4nfj9",{"filePath":"174","messages":"175","suppressedMessages":"176","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"177","messages":"178","suppressedMessages":"179","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"180","messages":"181","suppressedMessages":"182","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"183","messages":"184","suppressedMessages":"185","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1ml8mmo",{"filePath":"186","messages":"187","suppressedMessages":"188","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"189","messages":"190","suppressedMessages":"191","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1b6x9zu",{"filePath":"192","messages":"193","suppressedMessages":"194","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"195","messages":"196","suppressedMessages":"197","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/p/dev/byond/open-source/open/packages/eslint-plugin-automate/src/data/data-component-excludes.ts",[],[],"/Users/p/dev/byond/open-source/open/packages/eslint-plugin-automate/src/index.ts",[],[],"/Users/p/dev/byond/open-source/open/packages/eslint-plugin-automate/src/rules/TODO.ts",[],[],"/Users/p/dev/byond/open-source/open/packages/eslint-plugin-automate/src/rules/control-recoil-value-usage.ts",[],[],"/Users/p/dev/byond/open-source/open/packages/eslint-plugin-automate/src/rules/exhaustive-deps.ts",[],[],"/Users/p/dev/byond/open-source/open/packages/eslint-plugin-automate/src/rules/generate-react-component.ts",[],[],"/Users/p/dev/byond/open-source/open/packages/eslint-plugin-automate/src/rules/imports-spacing.ts",[],[],"/Users/p/dev/byond/open-source/open/packages/eslint-plugin-automate/src/rules/index.ts",[],[],"/Users/p/dev/byond/open-source/open/packages/eslint-plugin-automate/src/rules/no-imports.ts",[],[],"/Users/p/dev/byond/open-source/open/packages/eslint-plugin-automate/src/rules/no-optional.ts",[],[],"/Users/p/dev/byond/open-source/open/packages/eslint-plugin-automate/src/rules/no-react-hooks.ts",[],[],"/Users/p/dev/byond/open-source/open/packages/eslint-plugin-automate/src/rules/react-wrap-jsx-callback.ts",[],[],"/Users/p/dev/byond/open-source/open/packages/eslint-plugin-automate/src/rules/react-wrap.ts",[],[],"/Users/p/dev/byond/open-source/open/packages/eslint-plugin-automate/src/rules/recoil-add-key.ts",[],[],"/Users/p/dev/byond/open-source/open/packages/eslint-plugin-automate/src/rules/recoil-gen-template.ts",[],[],"/Users/p/dev/byond/open-source/open/packages/eslint-plugin-automate/src/rules/replace-identifier.ts",[],[],"/Users/p/dev/byond/open-source/open/packages/eslint-plugin-automate/src/rules/replace-svg.ts",[],[],"/Users/p/dev/byond/open-source/open/packages/eslint-plugin-automate/src/rules/rules-of-hooks.ts",[],[],"/Users/p/dev/byond/open-source/open/packages/eslint-plugin-automate/src/utils/ast-utils.ts",[],[],"/Users/p/dev/byond/open-source/open/packages/eslint-plugin-automate/src/utils/general-utils.ts",[],[],"/Users/p/dev/byond/open-source/open/packages/eslint-plugin-automate/src/utils/import-utils.ts",[],[],"/Users/p/dev/byond/open-source/open/packages/react-recoil-utils/src/index.ts",[],[],"/Users/p/dev/byond/open-source/open/packages/react-recoil-utils/src/singleton-hook.tsx",[],[],"/Users/p/dev/byond/open-source/open/packages/react-utils/src/index.tsx",[],[],"/Users/p/dev/byond/open-source/open/packages/recoil-utils/src/index.ts",[],[],"/Users/p/dev/byond/open-source/open/packages/recoil-utils/src/log-recoil.tsx",[],[],"/Users/p/dev/byond/open-source/open/packages/recoil-utils/src/recoil-v2.tsx",[],["198","199","200","201","202"],"/Users/p/dev/byond/open-source/open/packages/recoil-utils/src/recoil-v3.tsx",[],["203","204","205","206"],"/Users/p/dev/byond/open-source/open/packages/recoil-utils/src/recoil.tsx",[],["207"],"/Users/p/dev/byond/open-source/open/packages/utils/src/index.ts",[],[],"/Users/p/dev/byond/open-source/open/packages/utils/src/log.ts",[],[],"/Users/p/dev/byond/open-source/open/packages/utils/src/ts-utils.ts",[],[],"/Users/p/dev/byond/open-source/open/packages/utils/src/utils.ts",[],[],"/Users/p/dev/byond/open-source/open/packages/zustand-utils/src/index.ts",[],[],"/Users/p/dev/byond/open-source/open/packages/zustand-utils/src/use-zustand-create.tsx",[],[],"/Users/p/dev/byond/open-source/open/packages/example-app/src/app.tsx",[],[],"/Users/p/dev/byond/open-source/open/packages/example-app/src/main.tsx",[],[],"/Users/p/dev/byond/open-source/open/packages/example-app/src/vite-env.d.ts",[],[],{"ruleId":"208","severity":2,"message":"209","line":117,"column":8,"nodeType":"210","endLine":242,"endColumn":2,"fix":"211","suppressions":"212"},{"ruleId":"208","severity":2,"message":"209","line":245,"column":8,"nodeType":"210","endLine":247,"endColumn":2,"fix":"213","suppressions":"214"},{"ruleId":"208","severity":2,"message":"209","line":260,"column":8,"nodeType":"210","endLine":262,"endColumn":2,"fix":"215","suppressions":"216"},{"ruleId":"208","severity":2,"message":"209","line":288,"column":8,"nodeType":"210","endLine":450,"endColumn":2,"fix":"217","suppressions":"218"},{"ruleId":"208","severity":2,"message":"209","line":457,"column":8,"nodeType":"210","endLine":485,"endColumn":2,"fix":"219","suppressions":"220"},{"ruleId":"208","severity":2,"message":"209","line":60,"column":8,"nodeType":"210","endLine":66,"endColumn":2,"fix":"221","suppressions":"222"},{"ruleId":"223","severity":2,"message":"224","line":63,"column":5,"nodeType":"225","endLine":63,"endColumn":26,"suppressions":"226"},{"ruleId":"223","severity":2,"message":"227","line":63,"column":27,"nodeType":"225","endLine":63,"endColumn":44,"suppressions":"228"},{"ruleId":"223","severity":2,"message":"224","line":65,"column":5,"nodeType":"225","endLine":65,"endColumn":26,"suppressions":"229"},{"ruleId":"208","severity":2,"message":"209","line":182,"column":8,"nodeType":"210","endLine":188,"endColumn":2,"fix":"230","suppressions":"231"},"prefer-arrow-functions/prefer-arrow-functions","Prefer using arrow functions over plain functions","FunctionDeclaration",{"range":"232","text":"233"},["234"],{"range":"235","text":"236"},["237"],{"range":"238","text":"239"},["240"],{"range":"241","text":"242"},["243"],{"range":"244","text":"245"},["246"],{"range":"247","text":"248"},["249"],"react-hooks/rules-of-hooks","React Hook \"useRecoilValue_Recoil\" is called conditionally. React Hooks must be called in the exact same order in every component render.","Identifier",["250"],"React Hook \"useRecoilSelector\" is called conditionally. React Hooks must be called in the exact same order in every component render.",["251"],["252"],{"range":"253","text":"254"},["255"],[3712,7432],"const useRecoilMemoSelector = (fn: any, deps: DependencyList, key: string, isParamSelector: boolean | undefined = false) => {\n\tlet selectorCache = useRef<RecoilValueReadOnly<any>[]>([])\n\tlet paramSelectorCache = useRef<((param: any) => RecoilValueReadOnly<any>)[]>([])\n\n\tconst cachedDeps = useRef<DependencyList[]>([])\n\n\tlet depsCache = useMemo(() => {\n\t\treturn cacheMapAccess(key, selectorDepsCacheMap, cachedDeps)\n\t}, [key])\n\tlet selectorsCache = useMemo(() => {\n\t\treturn cacheMapAccess(key, selectorSelectorsCacheMap, selectorCache)\n\t}, [key])\n\tlet paramSelectorsCache = useMemo(() => {\n\t\treturn cacheMapAccess(key, selectorParamSelectorsCacheMap, paramSelectorCache)\n\t}, [key])\n\n\tlet cachedDepsLastIndex = depsCache.get().findIndex((cdeps) => areDepsEqual(cdeps, deps))\n\n\tconst { refreshAtom } = useRefreshAtom(\n\t\t`${key} (${isParamSelector ? 'recoilMemoParamSelector' : 'recoilMemoSelector'})`,\n\t\tisSelectorKeyLocal(key)\n\t)\n\tconst { asyncGet, asyncParamGet } = useRecoilAsyncGet()\n\n\tconst refresh = useSetRecoilState(refreshAtom)\n\n\tconst latestCachedDepsIndex = useRef(-1)\n\n\t/**\n\t * reason for not using ONE selector by wraping fn with useHandler - useHandler is in ref - it is local to component and we want global cache\n\t * reason for not wrapping global selector with a local one is that this local selector will get into deps and global cache will not happen\n\t */\n\n\t/* istanbul ignore else */\n\tif (cachedDepsLastIndex === -1) {\n\t\tdepsCache.push(deps)\n\t\tcachedDepsLastIndex = depsCache.get().length - 1\n\n\t\t// let returnObject = undefined\n\t\t// let shallowObjectEqual = (newValue: object | any[]) => {\n\t\t// \tfor (let key of newValue) {\n\t\t// \t\tif (!Object.is(a[key], b[key])) {\n\t\t// \t\t\treturn false\n\t\t// \t\t}\n\t\t// \t}\n\t\t// \treturn true\n\t\t// }\n\t\tif (isParamSelector) {\n\t\t\tlet retMap = new Map<string, any>()\n\t\t\tlet debounceMap = new Map<string, boolean>()\n\t\t\tparamSelectorsCache.push(\n\t\t\t\tselectorFamily({\n\t\t\t\t\tkey: getNextKey(`${key} (recoilMemoParamSelector)`),\n\t\t\t\t\tget:\n\t\t\t\t\t\t(p: any) =>\n\t\t\t\t\t\t({ get }) => {\n\t\t\t\t\t\t\tget(refreshAtom)\n\t\t\t\t\t\t\tconst stringifiedP = JSON.stringify(p)\n\t\t\t\t\t\t\tlet ret = fn(p)({\n\t\t\t\t\t\t\t\tget,\n\t\t\t\t\t\t\t\tgetParam: <P, R>(s: RecoilValueReadOnly<(p: P) => RecoilValueReadOnly<R>>) => {\n\t\t\t\t\t\t\t\t\treturn (p: P): R => get(get(s)(p))\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\tprev: retMap.get(stringifiedP),\n\t\t\t\t\t\t\t\tdebounce: () => {\n\t\t\t\t\t\t\t\t\tif (!debounceMap.get(stringifiedP)) {\n\t\t\t\t\t\t\t\t\t\tdebounceMap.set(stringifiedP, true)\n\t\t\t\t\t\t\t\t\t\tsetTimeout(\n\t\t\t\t\t\t\t\t\t\t\t() => {\n\t\t\t\t\t\t\t\t\t\t\t\tdebounceMap.set(stringifiedP, false)\n\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\tMath.round(1500 + Math.random() * 1000)\n\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t\treturn false\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\treturn true\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\tgetAsync: asyncGet,\n\t\t\t\t\t\t\t\tgetParamAsync: asyncParamGet,\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\tretMap.set(stringifiedP, ret)\n\t\t\t\t\t\t\treturn ret\n\t\t\t\t\t\t},\n\t\t\t\t})\n\t\t\t)\n\t\t}\n\n\t\tlet newCachedSelector = selector({\n\t\t\tkey: isParamSelector\n\t\t\t\t? getNextKey(`${key} (recoilMemoParamSelector item)`)\n\t\t\t\t: getNextKey(`${key} (recoilMemoSelector)`),\n\t\t\tget: ({ get }) => {\n\t\t\t\tif (isParamSelector) {\n\t\t\t\t\treturn paramSelectorsCache.get()[cachedDepsLastIndex]\n\t\t\t\t} else {\n\t\t\t\t\tget(refreshAtom)\n\t\t\t\t\treturn fn({\n\t\t\t\t\t\tget,\n\t\t\t\t\t\tgetAsync: asyncGet,\n\t\t\t\t\t\tgetParamAsync: asyncParamGet,\n\t\t\t\t\t\tgetParam: <P, R>(s: RecoilValueReadOnly<(p: P) => RecoilValueReadOnly<R>>) => {\n\t\t\t\t\t\t\treturn (p: P): R => get(get(s)(p))\n\t\t\t\t\t\t},\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t},\n\t\t})\n\t\tselectorsCache.push(newCachedSelector)\n\t} else {\n\t\tif (cachedDepsLastIndex !== latestCachedDepsIndex.current) {\n\t\t\tif (latestCachedDepsIndex.current !== -1) {\n\t\t\t\tsetTimeout(() => {\n\t\t\t\t\trefresh((v) => v + 1)\n\t\t\t\t}, 5)\n\t\t\t}\n\t\t}\n\t}\n\tlatestCachedDepsIndex.current = cachedDepsLastIndex\n\n\treturn selectorsCache.get()[cachedDepsLastIndex]\n};",{"kind":"256","justification":"257"},[7536,7679],"const useRecoilMemoValue = (fn: any, deps: DependencyList, key: string) => useRecoilValue(useRecoilMemoSelector(fn, deps, key, false));",{"kind":"256","justification":"257"},[8250,8384],"const useRecoilMemoParamSelector = (fn: any, deps: DependencyList, key: string) => useRecoilMemoSelector(fn, deps, key, true);",{"kind":"256","justification":"257"},[9479,14179],"const useRecoilEffect = (fn: (opts: GetOpts) => Promise<EffectReturn>, deps: DependencyList, gettersFn: (opts: { get: GetRecoilValue }) => void, key: string): void => {\n\tlet selectorCache = useRef<RecoilValueReadOnly<any>[]>([])\n\n\t/**\n\t * - selector is used to trigger a function, but the value it returs is fixed so that it will not trigger re-render\n\t * - the reason for async - we want the effect to be able to set recoil atoms, that can be done only detached from the render\n\t *   on the other hand want to access state, recoils gives an async get.\n\t * - the reason for a separate gettersFn - on mount we cannot run the fn straight but have to wait for the mount\n\t *   but the getter must run sync in order to register\n\t *\n\t */\n\n\tconst cachedDeps = useRef<DependencyList[]>([])\n\tconst isMounted = useRef(false)\n\tlet cleanFn = useRef<Promise<EffectReturn>>(Promise.resolve(void 0))\n\n\tconst { refreshAtom } = useRefreshMultipleAtom(`${key} (recoilEffect)`)\n\tconst refreshRefreshAtom = useSetRecoilState(refreshAtom)\n\tconst refresh = useHandler((i: number) => {\n\t\trefreshRefreshAtom((m) => {\n\t\t\tm.set(i, (m.get(i) ?? 0) + 1)\n\t\t\treturn new Map(m)\n\t\t})\n\t})\n\n\tconst { asyncGet, asyncParamGet, set } = useRecoilAsyncGet()\n\n\tlet cachedDepsIndex = -1\n\tcachedDepsIndex = cachedDeps.current.findIndex((cdeps) => areDepsEqual(cdeps, deps))\n\tconst latestCachedDepsIndex = useRef(-1)\n\n\tif (cachedDepsIndex === -1) {\n\t\t/* istanbul ignore else */\n\t\tcachedDeps.current.push(deps)\n\n\t\tlet prevValue = new Map<string, any>()\n\t\tlet getPrevAsync: GetAsync = async (recoilValue) => {\n\t\t\tlet val = await asyncGet(recoilValue)\n\t\t\tlet _prevValue = prevValue.get(recoilValue.key)\n\t\t\tprevValue.set(recoilValue.key, val)\n\t\t\treturn _prevValue\n\t\t}\n\t\tlet nextKey = getNextKey(`${key} (recoilEffect)`)\n\n\t\tcachedDepsIndex = cachedDeps.current.length - 1\n\n\t\tlet refreshSelector = selector({\n\t\t\tcachePolicy_UNSTABLE: {\n\t\t\t\teviction: 'most-recent',\n\t\t\t},\n\t\t\tkey: `${nextKey} (refreshSelector) cachedDepsIndex:${cachedDepsIndex}`,\n\t\t\tget: ({ get }) => {\n\t\t\t\tlet m = get(refreshAtom)\n\t\t\t\treturn m.get(cachedDepsIndex)\n\t\t\t},\n\t\t})\n\t\tlet newCachedSelector = selector({\n\t\t\tcachePolicy_UNSTABLE: {\n\t\t\t\teviction: 'most-recent',\n\t\t\t},\n\t\t\tkey: nextKey,\n\t\t\tget: ({ get }) => {\n\t\t\t\t/**\n\t\t\t\t * - refresh is used to trigger when switching to selector from cache, because recoil will not call selector get\n\t\t\t\t *   also it is used to trigger on mount\n\t\t\t\t */\n\t\t\t\tget(refreshSelector)\n\t\t\t\tif (isMounted.current) {\n\t\t\t\t\tgettersFn({ get })\n\t\t\t\t\tcleanFn.current.then(async (f) => {\n\t\t\t\t\t\tif (typeof f === 'function') {\n\t\t\t\t\t\t\tf()\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\t\t\t\t\t/**\n\t\t\t\t\t * getCurrentAsync: it gets to be current just because lint does not create getters for it as oppose to getAsync\n\t\t\t\t\t */\n\n\t\t\t\t\tcleanFn.current = fn({\n\t\t\t\t\t\tgetAsync: asyncGet,\n\t\t\t\t\t\tgetCurrentAsync: asyncGet,\n\t\t\t\t\t\tgetPrevAsync: getPrevAsync,\n\t\t\t\t\t\tgetParamAsync: asyncParamGet,\n\t\t\t\t\t\tset,\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t\treturn undefined\n\t\t\t},\n\t\t})\n\t\tselectorCache.current.push(newCachedSelector)\n\t}\n\n\tif (cachedDepsIndex !== latestCachedDepsIndex.current) {\n\t\tif (latestCachedDepsIndex.current !== -1) {\n\t\t\t/**\n\t\t\t * in order the refresh to run after useRecoilValue and to detach set from the render\n\t\t\t */\n\t\t\tlet _index = latestCachedDepsIndex.current\n\t\t\tlet dep = deps[0]\n\t\t\tsetTimeout(() => {\n\t\t\t\trefresh(_index)\n\t\t\t}, 5)\n\t\t}\n\t}\n\n\tlatestCachedDepsIndex.current = cachedDepsIndex\n\n\tlet currentSelector = selectorCache.current[cachedDepsIndex]\n\tassertIsDefined(currentSelector)\n\tuseRecoilValue(currentSelector)\n\n\t/**\n\t * most of the problem solved is for react strict mode which causes remount probably sync mount after unmount after first mount.\n\t * waitForClean put in ref in order to persist between mounts.\n\t * if the\n\t */\n\tconst waitForClean = useRef(Promise.resolve())\n\n\tuseEffect(() => {\n\t\tisMounted.current = true\n\n\t\tlet stopInitializingWeAreUnmountingAlready = false\n\t\tlet selectorInitialized = false\n\t\twaitForClean.current.then(() => {\n\t\t\tif (!stopInitializingWeAreUnmountingAlready) {\n\t\t\t\tselectorInitialized = true\n\t\t\t\t// refresh will cause selector to run sync\n\t\t\t\trefresh(0)\n\t\t\t}\n\t\t})\n\t\treturn () => {\n\t\t\t// remount will not reset ref\n\t\t\tisMounted.current = false\n\n\t\t\tif (!selectorInitialized) {\n\t\t\t\tstopInitializingWeAreUnmountingAlready = true\n\t\t\t} else {\n\t\t\t\tlet resolve: () => void\n\t\t\t\twaitForClean.current = new Promise((_resolve) => {\n\t\t\t\t\tresolve = _resolve\n\t\t\t\t})\n\t\t\t\tcleanFn.current.then((f) => {\n\t\t\t\t\tlet result = typeof f === 'function' ? f() : void 0\n\t\t\t\t\tif (result instanceof Promise) {\n\t\t\t\t\t\tresult.then(resolve)\n\t\t\t\t\t} else {\n\t\t\t\t\t\tresolve()\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t}\n\n\t\t\t// remount will not reset ref\n\t\t\tcleanFn.current = Promise.resolve(void 0)\n\t\t}\n\t}, [])\n\n\treturn void 0\n};",{"kind":"256","justification":"257"},[14438,15141],"const useMaybeAtom = <T>(atomOrSelectorOrUndefined: RecoilValue<T> | undefined, key: string): RecoilValueReadOnly<T | undefined> => {\n\tlet latestAtom = useLatest(atomOrSelectorOrUndefined)\n\n\tlet workSelector = useRef(\n\t\tuseMemo(() => {\n\t\t\treturn selector({\n\t\t\t\tkey: getNextKey(`${key} param-atom:(${latestAtom.current?.key ?? ''}) (useMaybeAtom)`),\n\t\t\t\tget: ({ get }) => {\n\t\t\t\t\tif (latestAtom.current) {\n\t\t\t\t\t\treturn get(latestAtom.current)\n\t\t\t\t\t}\n\t\t\t\t\treturn undefined\n\t\t\t\t},\n\t\t\t})\n\t\t}, [key])\n\t)\n\n\tlet refresh = useRecoilRefresher_UNSTABLE(workSelector.current)\n\n\tuseEffect(() => {\n\t\trefresh()\n\t\tlet __dep__ = atomOrSelectorOrUndefined\n\t}, [atomOrSelectorOrUndefined])\n\n\treturn workSelector.current\n};",{"kind":"256","justification":"257"},[1660,1949],"const useRecoilValue = <T, R>(atom: RecoilValue<T>, fn?: (p: T) => R) => fn\n\t\t? // eslint-disable-next-line react-hooks/rules-of-hooks\n\t\t  useRecoilValue_Recoil(useRecoilSelector(atom, fn))\n\t\t: // eslint-disable-next-line react-hooks/rules-of-hooks\n\t\t  useRecoilValue_Recoil(atom);",{"kind":"256","justification":"257"},{"kind":"256","justification":"257"},{"kind":"256","justification":"257"},{"kind":"256","justification":"257"},[5213,5414],"const useRecoilAsyncCallback = (fn: any) => {\n\tconst { asyncGet, asyncParamGet, set } = useRecoilAsyncGet()\n\n\treturn useHandler((...p: any[]) => {\n\t\treturn fn({ asyncGet, asyncParamGet, set })(...p)\n\t})\n};",{"kind":"256","justification":"257"},"directive",""]